/// <reference types="drapo" />
declare function dropdowntreeConstructor(el: HTMLElement, app: DrapoApplication): Promise<any>;
declare class DropDownTree {
    private readonly TYPE_INLINE;
    private readonly LEFT;
    private readonly RIGHT;
    private readonly UP;
    private readonly DOWN;
    private readonly ENTER;
    private readonly TAB;
    private _el;
    private _app;
    private _state;
    private _classOpen;
    private _classClose;
    private _classExpand;
    private _classCollapse;
    private _classNode;
    private _classSelected;
    private _classSelection;
    private _dataKey;
    private _sector;
    private _prefix;
    private _key;
    private _value;
    private _model;
    private _onModelChange;
    private _hierarchy;
    private _expanded;
    private _data;
    private _keySelected;
    private _isSearching;
    private _isNullable;
    private _isFirstOrDefault;
    private _isEnsureValidSelection;
    private _isFixed;
    private _valueText;
    private _watchText;
    private _viewtype;
    private _allowMustache;
    private _selectionIndex;
    private _hasHierarchy;
    private _modelNotify;
    private _multiselection;
    private _onClose;
    constructor(el: HTMLElement, app: DrapoApplication);
    Initalize(): Promise<void>;
    private GetElementText;
    private GetElementButton;
    private GetElementList;
    private HandleButtonClick;
    private HandleDocumentMouseUp;
    private HandleDocumentScroll;
    private HandleTextClick;
    private HandleTextFocus;
    private HandleTextBlur;
    private HandleTextKeyUp;
    private HandleListKeyUp;
    private HandleTextKeyDown;
    private HandleListClick;
    HandleDataSourceChanged(): Promise<void>;
    HandleDataSelectionChanged(): Promise<void>;
    private IsFixed;
    private GetElementListTop;
    private GetElementListWidth;
    private ActionOpen;
    private CanClose;
    private ActionClose;
    private NotifyModelData;
    private ActionFinish;
    private ActionSelect;
    private GetData;
    private GetModelData;
    private EnsureModelData;
    private GetDataKey;
    private GetDataValue;
    private GetDataHierarchy;
    private IsKeyValid;
    private GetValue;
    private GetValueInternal;
    private GetKey;
    private GetKeyInternal;
    private IsNodeExpanded;
    private IsNodeMatch;
    private SwitchExpanded;
    private GetFirstOrDefaultValue;
    private EnsureNodeVisible;
    private GetKeyParent;
    WatchText(): Promise<void>;
    private FillText;
    private ClearList;
    ReloadList(): Promise<void>;
    private FillListTree;
    private FillListSearch;
    private AppendNodes;
    private AppendNode;
    private CreateNode;
    private GetNodeByKey;
    private HasDataHierarchy;
    private UpdateModelData;
    private SetValueText;
    private ApplySelection;
    private ChangeSelectionDown;
    private ChangeSelectionUp;
    private ChangeSelectionExpand;
    private ChangeSelectionCollapse;
    private AddClassSelection;
    private RemoveClassSelection;
}
